/*
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.3'
    id 'java-library'
    id 'jacoco'
}

group 'org.hyperledger.fabric.samples'
version '1.0-SNAPSHOT'

dependencies {
    implementation 'org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:1.4.3'
    implementation 'com.owlike:genson:1.5'
    implementation 'com.alibaba:fastjson:1.2.62'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-core:2.+'
    compile fileTree(dir:'libs', include: ['*.jar'])
}

repositories {
    flatDir{
        dirs 'libs'
    }
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

shadowJar {
    baseName = 'chaincode'
    version = null
    classifier = null
    manifest {
        attributes 'Main-Class': 'org.hyperledger.fabric.contract.ContractRouter'
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                    'org/hyperledger/fabric/samples/authentication/Start.*'
            ])
        })
    }
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
    
    finalizedBy jacocoTestReport
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

check.dependsOn jacocoTestCoverageVerification
